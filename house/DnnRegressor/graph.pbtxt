node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 387
          }
        }
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\232\202\346\227\240\346\225\260\346\215\256"
        string_val: "\346\232\202\346\227\240\346\225\260\346\215\256"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\232\202\346\227\240\346\225\260\346\215\256"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\232\202\346\227\240\346\225\260\346\215\256"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\232\202\346\227\240\346\225\260\346\215\256"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\232\202\346\227\240\346\225\260\346\215\256"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\232\202\346\227\240\346\225\260\346\215\256"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\234\211"
        string_val: "\346\227\240"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 387
          }
        }
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\345\241\224\347\273\223\345\220\210"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\345\241\224\347\273\223\345\220\210"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\345\241\224\347\273\223\345\220\210"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\232\202\346\227\240\346\225\260\346\215\256"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\345\241\224\347\273\223\345\220\210"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\345\241\224\347\273\223\345\220\210"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
        string_val: "\346\235\277\346\245\274"
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 387
          }
        }
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\345\205\266\344\273\226"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\346\257\233\345\235\257"
        string_val: "\345\205\266\344\273\226"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\256\200\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\262\276\350\243\205"
        string_val: "\346\257\233\345\235\257"
        string_val: "\347\256\200\350\243\205"
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 387
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 387
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 387
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 387
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 387
          }
        }
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\346\267\267\345\220\210\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\346\234\252\347\237\245\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\346\267\267\345\220\210\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
      }
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 387
          }
        }
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\344\270\234\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\344\270\234"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\344\270\234\345\214\227"
        string_val: "\344\270\234\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\214\227\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\344\270\234\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\344\270\234\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\344\270\234"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\344\270\234\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\344\270\234"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\350\245\277\350\245\277\345\214\227"
        string_val: "\350\245\277"
        string_val: "\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\350\245\277\345\215\227"
        string_val: "\345\215\227"
        string_val: "\350\245\277"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\350\245\277"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\344\270\234\345\215\227"
        string_val: "\350\245\277\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\350\245\277\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\214\227\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\350\245\277\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\344\270\234\345\215\227\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\350\245\277\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\350\245\277\345\214\227"
        string_val: "\345\215\227\350\245\277\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\344\270\234\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\344\270\234\345\215\227\345\214\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227"
        string_val: "\345\215\227\345\214\227"
        string_val: "\345\214\227"
        string_val: "\344\270\234\350\245\277"
        string_val: "\345\215\227"
      }
    }
  }
}
node {
  name: "Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 387
          }
        }
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\345\234\260"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\351\253\230"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
        string_val: "\351\253\230"
      }
    }
  }
}
node {
  name: "Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 387
          }
        }
        tensor_content: "\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\032\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\tnt\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\nrr\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000!\000\000\000\000\000\000\000$\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\rn\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\021\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\031\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\033\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\026\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\034\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\032\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\"\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 387
          }
        }
        tensor_content: "\256G\341z\024nB@\205\353Q\270\036\205<@\341z\024\256GQS@33333\023@@\315\314\314\314\314\214V@fffff\226P@R\270\036\205\353\221H@q=\n\327\243\320G@\217\302\365(\\\237V@=\n\327\243p}A@fffff\346Z@\244p=\n\327#W@\232\231\231\231\231yI@\354Q\270\036\205[S@\341z\024\256G1P@=\n\327\243p\275N@H\341z\024\256wR@\n\327\243p=\212U@\341z\024\256G\221U@\\\217\302\365(\374W@\205\353Q\270\036\205K@{\024\256G\341\212S@\315\314\314\314\314\334\\@\024\256G\341z\224=@\366(\\\217\302\265V@\303\365(\\\217\"B@\000\000\000\000\000pj@\315\314\314\314\314\354T@=\n\327\243p\275H@\341z\024\256G\001T@q=\n\327\243\200S@{\024\256G\341\252W@\000\000\000\000\000\000Q@\n\327\243p=\272R@\232\231\231\231\231\351P@\327\243p=\nWF@\000\000\000\000\000\000O@\000\000\000\000\000\340N@\341z\024\256GAN@\341z\024\256GQ\\@{\024\256G\341ZD@\n\327\243p=ZU@\000\000\000\000\000\020r@\315\314\314\314\314lD@\354Q\270\036\205\213S@\024\256G\341z\364L@=\n\327\243p}M@\315\314\314\314\314\014Y@\205\353Q\270\036\025S@33333\323S@)\\\217\302\365\010L@)\\\217\302\365\310L@\000\000\000\000\000\300T@\303\365(\\\217\302;@\000\000\000\000\000\300V@\270\036\205\353Q\370Q@H\341z\024\256\217`@\024\256G\341zTK@\366(\\\217\302EZ@\037\205\353Q\270>V@q=\n\327\243\240g@\000\000\000\000\000x`@\037\205\353Q\270\316S@\256G\341z\024\016J@q=\n\327\243\220V@\232\231\231\231\231yS@)\\\217\302\365\350X@q=\n\327\243\260T@q=\n\327\243\360F@\256G\341z\024\016T@\303\365(\\\217\322R@33333\363B@\000\000\000\000\000\200Z@\341z\024\256G\241G@\270\036\205\353QxK@=\n\327\243p\235U@\024\256G\341z\364Z@\232\231\231\231\231YV@\315\314\314\314\314|P@\327\243p=\n\367S@\315\314\314\314\314\014I@\354Q\270\036\205\033P@\024\256G\341z$W@\303\365(\\\217j`@33333#T@=\n\327\243p\375S@\\\217\302\365(\214V@\024\256G\341z\224Q@\327\243p=\n\367F@\366(\\\217\3025V@)\\\217\302\365\350I@)\\\217\302\365\310O@q=\n\327\243\220@@\000\000\000\000\000\300]@\303\365(\\\217\242P@\366(\\\217\302\365J@{\024\256G\341\332G@\366(\\\217\302\025_@\000\000\000\000\000``@q=\n\327\243\210e@\024\256G\341z4B@\232\231\231\231\231\331U@=\n\327\243p\335K@=\n\327\243p\355X@\\\217\302\365(\374N@R\270\036\205\353\351a@)\\\217\302\365\010X@\327\243p=\n\347P@H\341z\024\256GY@\270\036\205\353Q\330K@\037\205\353Q\270\236e@\270\036\205\353Q\370D@\\\217\302\365(LY@\315\314\314\314\314\354V@33333\203R@q=\n\327\243\320j@\024\256G\341z\224S@\327\243p=\n\267U@\327\243p=\n\207S@=\n\327\243p]G@\303\365(\\\217bL@\037\205\353Q\270\336>@\327\243p=\n\227B@\\\217\302\365(\\P@\341z\024\256GAI@\024\256G\341z\024N@\000\000\000\000\000`B@\366(\\\217\302UH@\354Q\270\036\205kI@\205\353Q\270\036\005I@\303\365(\\\217BQ@fffff\346L@)\\\217\302\365\230T@q=\n\327\2430S@H\341z\024\256\207[@R\270\036\205\353qM@\303\365(\\\217\232b@\037\205\353Q\270^A@\037\205\353Q\270~G@H\341z\024\256\027V@=\n\327\243p}U@\315\314\314\314\314\254U@\000\000\000\000\000\240L@\366(\\\217\302UD@\354Q\270\036\205KF@\354Q\270\036\205\213H@33333\363E@\024\256G\341z4A@\217\302\365(\\\237R@H\341z\024\256O`@)\\\217\302\365HS@\232\231\231\231\231\231@@\000\000\000\000\000\320`@\244p=\n\327CN@\270\036\205\353Q\310U@\366(\\\217\302\235`@R\270\036\205\353\021=@\256G\341z\024\356J@\205\353Q\270\036\365^@fffff\306H@ffffff:@q=\n\327\243\340U@\n\327\243p=\222i@\366(\\\217\302\025E@\000\000\000\000\000\340b@\037\205\353Q\270~N@R\270\036\205\353A[@q=\n\327\243\020T@\256G\341z\024\226d@\232\231\231\231\2319Q@\270\036\205\353Q\270H@\341z\024\256G!=@\232\231\231\231\231\231=@\303\365(\\\217\002J@\000\000\000\000\000\200A@\366(\\\217\302\205X@\000\000\000\000\000\300c@\244p=\n\327CK@\\\217\302\365(<V@q=\n\327\243\220J@\000\000\000\000\000\000X@{\024\256G\341\332L@\232\231\231\231\231YV@\\\217\302\365(\234M@\n\327\243p=\372W@\n\327\243p=\n^@\217\302\365(\\\317H@\341z\024\256G!C@\341z\024\256G\241]@33333SG@{\024\256G\341\272V@\000\000\000\000\000\240g@\205\353Q\270\036eT@33333\223H@\256G\341z\024\316H@\354Q\270\036\205\333Q@\327\243p=\nw]@\037\205\353Q\270\336D@\024\256G\341zD]@{\024\256G\341ZC@\000\000\000\000\000\260R@\244p=\n\327\303H@{\024\256G\341zP@R\270\036\205\353\341Q@\000\000\000\000\000\200T@\\\217\302\365(,Y@\366(\\\217\302\325V@\303\365(\\\217\232`@33333CY@{\024\256G\341\252T@R\270\036\205\353Aa@\315\314\314\314\314\214I@)\\\217\302\365\010O@\037\205\353Q\270NT@33333\203X@\000\000\000\000\000\200V@\217\302\365(\\\257A@q=\n\327\243pX@H\341z\024\256WY@)\\\217\302\365\270S@=\n\327\243p=_@\315\314\314\314\314,S@\366(\\\217\302\025h@\037\205\353Q\270\236L@\270\036\205\353QxG@\244p=\n\327\303O@\366(\\\217\302\225E@\000\000\000\000\000@T@\244p=\n\327#N@R\270\036\205\353\221E@\354Q\270\036\205kO@\232\231\231\231\231Y>@q=\n\327\243\200R@\000\000\000\000\000@Q@\270\036\205\353Q\030P@\270\036\205\353Q\270I@\303\365(\\\2172T@\256G\341z\024^S@\205\353Q\270\036\005T@H\341z\024\256gN@\315\314\314\314\314\214V@\327\243p=\nwD@\217\302\365(\\\237V@\024\256G\341z\344P@H\341z\024\256gV@q=\n\327\243\200Z@{\024\256G\341:J@\354Q\270\036\205kU@\000\000\000\000\000\200Z@\256G\341z\024nM@q=\n\327\243\220I@\315\314\314\314\314LD@\270\036\205\353QXO@\000\000\000\000\000`U@\315\314\314\314\314\314G@\270\036\205\353Q\330N@\315\314\314\314\314,T@=\n\327\243p=I@fffff\006_@\244p=\n\327\323W@\n\327\243p=\252W@q=\n\327\2430X@R\270\036\205\353\221_@\037\205\353Q\270\036<@=\n\327\243p\021~@q=\n\327\243\020M@\037\205\353Q\270~L@\000\000\000\000\000\300Q@\366(\\\217\302\305Q@\270\036\205\353Q\350X@\315\314\314\314\314\214D@\037\205\353Q\270\336K@33333\363D@\256G\341z\024.E@\315\314\314\314\314\014G@H\341z\024\256\307M@\270\036\205\353Q\330G@\217\302\365(\\OR@\327\243p=\n\227E@\244p=\n\327\243O@q=\n\327\243 \\@33333sH@fffffFT@\366(\\\217\302\345R@q=\n\327\243\340X@\217\302\365(\\_V@fffff\346U@)\\\217\302\365\210@@\037\205\353Q\270\376L@\000\000\000\000\000`B@\000\000\000\000\000\200U@\244p=\n\327\263X@\341z\024\256Ga5@\037\205\353Q\270\336]@R\270\036\205\353\221M@\037\205\353Q\270~X@\270\036\205\353QxK@\327\243p=\nWH@=\n\327\243pmQ@=\n\327\243p=S@\232\231\231\231\231\331J@\024\256G\341z\224U@\366(\\\217\302\225b@\217\302\365(\\\217F@\205\353Q\270\036\245O@\037\205\353Q\270\216R@\341z\024\256G!V@\037\205\353Q\270\336B@\n\327\243p=:R@\217\302\365(\\_S@\270\036\205\353QHP@\327\243p=\n\227\\@\256G\341z\024\236T@\256G\341z\024\236T@\\\217\302\365(\374J@\244p=\n\327CV@\217\302\365(\\OB@\205\353Q\270\036\035g@=\n\327\243p\235D@R\270\036\205\353\321L@\303\365(\\\217\352`@\037\205\353Q\270\356Z@\\\217\302\365(\254S@\000\000\000\000\000\300S@\232\231\231\231\231\351S@\232\231\231\231\231IS@\000\000\000\000\000\240c@H\341z\024\256WZ@\024\256G\341ztL@\232\231\231\231\231\331>@\205\353Q\270\036\245Q@\232\231\231\231\231\351S@\366(\\\217\302\025W@{\024\256G\341\332Q@fffff\006@@\024\256G\341zTL@\270\036\205\353Q\030B@\256G\341z\024\336\\@\354Q\270\036\205+D@333333K@\024\256G\341ztK@q=\n\327\243\000Q@\037\205\353Q\270\276C@H\341z\024\256\327R@\232\231\231\231\231\271C@\303\365(\\\217RR@\270\036\205\353Q\270J@\037\205\353Q\270\236R@R\270\036\205\353\221V@33333\303U@)\\\217\302\365\310_@)\\\217\302\365HF@\000\000\000\000\000 q@\256G\341z\024\036X@fffff\036b@\n\327\243p=\212C@\000\000\000\000\000\340X@{\024\256G\341\032E@ffffffB@\366(\\\217\302]r@\000\000\000\000\000\300c@\\\217\302\365(\354_@H\341z\024\256\027T@\000\000\000\000\000\360Y@R\270\036\205\353QR@\341z\024\256GaM@\000\000\000\000\000\300V@\000\000\000\000\000\200S@\037\205\353Q\270^G@\315\314\314\314\314\374P@\217\302\365(\\OX@\315\314\314\314\314\014K@\000\000\000\000\000\300G@\270\036\205\353Q\330G@\244p=\n\3273T@\000\000\000\000\000\000K@)\\\217\302\365HO@\n\327\243p=jT@H\341z\024\256g@@\000\000\000\000\000\200O@\n\327\243p=r`@R\270\036\205\353\361U@\315\314\314\314\314\014K@\303\365(\\\217\002_@\256G\341z\024.7@\303\365(\\\217\202P@\303\365(\\\217\022P@"
      }
    }
  }
}
node {
  name: "Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 387
          }
        }
        tensor_contentc!\013Y\310B\306?\000\000\000\000\000\000\320?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?UUUUUU\325?\000\000\000\000\000\000\360?\000\000\000\000\000\000\320?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?\000\000\000\000\000\000\320?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340?\000\000\000\000\000\000\320?\000\000\000\000\000\000\340?UUUUUU\325?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?UUUUUU\325?\000\000\000\000\000\000\340?\000\000\000\000\000\000\320?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?\222$I\222$I\302?UUUUUU\325?\000\000\000\000\000\000\340?\000\000\000\000\000\000\320?\000\000\000\000\000\000\340?\000\000\000\000\000\000\320?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?\000\000\000\000\000\000\320?\000\000\000\000\000\000\320?UUUUUU\325?UUUUUU\325?UUUUUU\325?\000\000\000\000\000\000\340?\000\000\000\000\000\000\360?\000\000\000\000\000\000\340?\000\000\000\000\000\000\020@\000\000\000\000\000\000\340?\000\000\000\000\000\000\340?t\321E\027]ttq\034\307q\274?\000\000\000\000\000\000\320?\000\000\000\000\000\000\340?"
      }
    }
  }
}
node {
  name: "Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 387
          }
        }
        tensor_content: "\361~\0309\\6[@\340\216\231\017z]^@ig\331H\'Z^@\224\315\022\262\332[^@wt\216\267]Z^@$q\177\347m[^@3l\226\004\337X^@\224\315\022\262\332[^@\332\376e\237\356W^@\264\353\267\3679\213[@Os_\006\033X^@w&\263b\022]^@\202\271\304\266\320V^@0\302L\366\214O^@\004\320s\355\342T^@H\"\243+\\X^@ig\331H\'Z^@ig\331H\'Z^@J\227!f)^^@\212\036\371\374XZ^@\210.|8\256Z^@9\376Aq\307g]@ig\331H\'Z^@ig\331H\'Z^@V\354\236P2J^@]2\2152\376#Z@j)u\247}Y^@\'\223\341.i\036]@\2064\277=\214\307]@[9$D\024Z^@\256)Y\000o\\^@\274\034\221(_V^@G\231@O\361`^@\201\'\351o\264W^@\356\361\2324JF^@\266gE\350\257Z^@ig\331H\'Z^@ig\331H\'Z^@\262\333L-:V^@ig\331H\'Z^@ig\331H\'Z^@w\022p\346:M^@\200\t\212\036\334C^@G \372\031\'Y^@\305\364O\3655Z^@\007+\254\250\363h^@\261\252\220\024\370W^@\235\271:6\241X^@ig\331H\'Z^@J\001\264KBk]@\256\344\347a\373[^@\036\303\r\2537\\^@ig\331H\'Z^@\007y\216\001\334\\^@\204\241\373bAZ^@!S\343\361GP^@\272\235F?\361_^@\376\274%\264\306\312]@ig\331H\'Z^@a\021\200Jo^^@u\rZ\272iW^@9\376Aq\307g]@x\320\366@\256;^@\214\013\247 \257X^@G\267\017H\246M^@\224\036u6vJ^@J\227!f)^^@\216\214\333\215\330V^@g\246|\330\306[^@1C\373\010\202b^@E.\016\372\177\371]@1\201\247\2524[^@\305\27128/V^@S<h\367q`^@ig\331H\'Z^@\252\360\207R\373Y^@.\234&@BZ^@i\313N\231c[^@\345\255)\3331\\^@ig\331H\'Z^@\256\273\206c\214_^@ig\331H\'Z^@`\334\025L\344X^@\367K@\003\216V^@\246\207\001s\356P^@\224\036u6vJ^@ig\331H\'Z^@\272\312\345\231\325Z^@\026\024\031\361\nO^@\307\3135\267\014a^@G8\017\306\335W^@\341-i7%a^@\222\306\026\271\246\307]@TV\310\206\303]^@\372\033\3001\342[^@\335)\222\376h[^@\373o\212\2513Z^@9\376Aq\307g]@\205\207?\233\366L^@\030:$\310\370[^@\377\312J&\025b^@\314\363\202\225`U^@\036\234Xe]\\^@ig\331H\'Z^@]2\2152\376#Z@_\311\307\314wP^@\177\023\3261\003\\^@\373o\212\2513Z^@w\256\301\323\264W^@\357\023\245\332>\223[@ig\331H\'Z^@U\222\004\324k\\^@\0147\034\236\010\033]@\217\331\265I:W^@to\342U\245Z^@\304\2253\252\355_^@\000\000\000\000\000\000\000\000be)\256\216Z^@ig\331H\'Z^@U\233\316\251_[^@ig\331H\'Z^@\237\3004\230n[^@\014]\013\266j\\^@\333\234\024\320[X^@d/\217\377\314W^@*H\224Jw[^@ig\331H\'Z^@ig\331H\'Z^@\323\217\305S\307^^@<P6\276!\\^@\024F\227\010Hb^@\261\251A\236A\200^@c\016\010\355W\034Z@h\267\360=/c^@\346`g\310\310^^@#\357U\246\320\212[@\233X\2005\337_^@ \260\260\037\340\021^@\327\274\276\t\356Y^@ig\331H\'Z^@ig\331H\'Z^@c\204\207\300\270J^@\353\326\267\016\030Z^@O\257L[e\177]@S\007\tU\242[^@ig\331H\'Z^@e\322R\034HY^@\256\320\262Y:b^@ig\331H\'Z^@ig\331H\'Z^@\224\036u6vJ^@\215I\\(|a^@\374PL\204bX^@ig\331H\'Z^@ig\331H\'Z^@\353\230\271Pd]^@\002t\301\213\361Z^@t\025,b\255X^@\032\300\302\344\220\\^@\345\251l<\360Z^@B\034\\\024\260_^@m\0237nk^^@NQr\236I[^@[9$D\024Z^@\313eE@\360]^@\255*\211\260\245Y^@\362\211\252h\021Y^@ig\331H\'Z^@8C\232\275m]^@ig\331H\'Z^@ig\331H\'Z^@\330\260k\235\ra^@\351\020\253\337\301b^@\232t+\036\346b^@ig\331H\'Z^@\226\367\310V\266Z^@:\212\314\026\017`^@U\233\316\251_[^@_\311\307\314wP^@\264\353\267\3679\213[@\003\n\025\242\213Y^@v<\320\207\362U^@i\313N\231c[^@\271\351\357\017x]^@ig\331H\'Z^@z\222\201\345\220U^@\265\363\364\361]Z^@\241\335\224\320\343[^@ig\331H\'Z^@ig\331H\'Z^@a\224\200\323\240N^@\375\200\373z9\260\\@5\r\0372\\[^@\014+\273u\267T^@\215\256\256V\020`^@\020\275\221\251\270^^@\004\257\t\003\010f^@\321^\201\010\271T^@ig\331H\'Z^@)\261,\000\367b^@\035\317j\275\365Y^@\325\234\007\3718]^@\304\202\245i\271[^@\357n~\245\342Y^@:\200\275\216K^^@%\216b\277\354W^@\036\351d\337kZ^@\0171\264>\233Z^@^\025\025qMU]@Q\267\377b\265P^@8\201s\017\321M^@0\316\276>s\030]@ig\331H\'Z^@k\251\016_\263^^@/\351\301\360\271Z^@,\0052\333+\316\\@]\227\007\352\006_^@v?$\271\322T^@\253;\323\021\334U^@ig\331H\'Z^@\215\037\377-$V^@\037\3150\204\325V^@\305\341\301\264\001V^@A\242\003+\206G^@t7\272[!`^@\037\374\355\021\244X^@0\316\276>s\030]@\337\232\303\262\314P^@/\177\343H\247[^@Ti%\277(`^@\272\252\014\277\020`^@d\tx\353\025Z^@8#\355\334{^^@$\321\207\311\006M^@ig\331H\'Z^@@\025\211\024\324Y^@\361.@%\355E\\@a\336\373\001gO^@ig\331H\'Z^@\213\365#\216\363b^@\363\343RY\356\\^@{\022b\336\000`^@em\376\206\027R^@\024F\227\010Hb^@\200e\0034\236P^@7\363\373FXU^@\223B\031$\223\\^@2\3119\013\035P^@\363T\223\306JL^@\237\034\2226\377S^@>\311\'\272p[^@\371\002w\363\360\\^@\203\272N\302IT^@\244`h\324A\227\\@\353\330\247\340\222\\^@ig\331H\'Z^@\204\330i\211@J^@s\335\325\006\272Y^@\357\023\245\332>\223[@ig\331H\'Z^@fk\231\216\310X^@\224\036u6vJ^@+\277\264\227\373X^@\230^\2443\014c^@\320\255\262/iW^@J\227!f)^^@ig\331H\'Z^@\237\352\250\256dI`@*q\3061\231W^@\205:\"\350hk^@y\251w\202\232[^@\271\351\357\017x]^@\034+\262\031*X^@\177\234\330\3512b^@t\033V8\177O^@/\316B[\254[^@\373o\212\2513Z^@\003\n\025\242\213Y^@ig\331H\'Z^@\263\312\250_\271\\^@ig\331H\'Z^@\310\276\233lxJ\\@ig\331H\'Z^@[9$D\024Z^@ig\331H\'Z^@g=\364\214\376Z^@hw\332\232PZ^@.\022D\003[Y^@h\351\204&\315X^@ig\331H\'Z^@G\231@O\361`^@\210\226C\254TZ^@\010\361\006\234,Z^@Q\222\030\233`\\^@ig\331H\'Z^@\246rm\031\304`^@.2\302?\017\274]@\264D\230^\232X^@ig\331H\'Z^@\333>\202\220\214[^@ig\331H\'Z^@d\016c\340\030t^@|\312\252\021\310^^@\346n\001\273\006]^@\306Up\324\316g^@\201\'\351o\264W^@\240\0248\315\352^^@ig\331H\'Z^@p\002\022\010\212V^@ig\331H\'Z^@\341-i7%a^@S\224>\022\253N^@\3019\002>\002\247]@\3019\002>\002\247]@\236\255B\333\340[^@\016X\372\260\177M^@ig\331H\'Z^@#*X\352\207Y^@\254\017\211\nr\025^@Y-\312\330\265Y^@\335\363\355\251\311S^@\351\223\005:PZ^@ig\331H\'Z^@ig\331H\'Z^@V\226h\341\023K^@\360[ -\272b^@\320Q\004\265\232O^@{-\334e\022Y^@x\235\272P\300[^@\024F\227\010Hb^@\332JS\211[[^@V\226h\341\023K^@\367\331\353\360OU^@aC~\230rI]@Go\302\266\201Z^@ig\331H\'Z^@\377q\255t\377_^@\253\241@\351\356\\^@\247\342C\252\341V[@\022\022\313\334*Z^@ig\331H\'Z^@\313\230H\344\256P^@\315\316\237\363^[^@\356@\033-\252\215\\@ig\331H\'Z^@*q\3061\231W^@;DopOP^@8\205\\\031\341b^@wt\216\267]Z^@5P\033\344\343b^@[9$D\024Z^@+\022\324y\207P^@\235\332&\005\211X^@N\254\353_\004O^@\325^\374w-W^@hj\034\320\214]^@e\343y\002\260J^@S\243\034w\365Z^@ig\331H\'Z^@v\255&\036\301^^@\205{\357K\220X^@ig\331H\'Z^@\256\004\232P\351`^@J\227!f)^^@\211\375\211\t\241T^@\366\210\200\006\232V^@\036\351d\337kZ^@\214\226Y\356\260T^@ig\331H\'Z^@\330U\022?\306b^@ig\331H\'Z^@ig\331H\'Z^@ig\331H\'Z^@\373o\212\2513Z^@\177\234\330\3512b^@\244\354T\310[c^@ae\207\334([^@%\324\337R\005V^@\244u\254H\013Z^@[9$D\024Z^@l\2350\031\247\\^@\241\335\224\320\343[^@1\332l\376\376N^@i\313N\231c[^@\310\276\233lxJ\\@f\376\303-\222_^@*/\362\244=1]@"
      }
    }
  }
}
node {
  name: "Const_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 387
          }
        }
        tensor_content: "\371SU\267CDA@\270i\375\002\023W?@\016\252\246,g\342>@c\\H\222\234-?@\363\335\372\341\271\006?@\210S\240S\2610?@\007\331\242wl\036?@c\\H\222\234-?@\371o\340\212+D?@\302\224\377\0078\007B@\352a\333\353]#?@/_\nVh%?@Xl\343\231OR?@\2753n<\033c?@\253\313\235\300\004\'?@\030~U\003!+?@\016\252\246,g\342>@\016\252\246,g\342>@\376\325\272f\356\357>@\375P8R\371\'?@\2056\033\253\032\002?@\3664<\224\300^<@\016\252\246,g\342>@\016\252\246,g\342>@<c\213\247e+?@e\250bO\246e>@N\254L&\304\021?@\210\277F\006\323\377C@\253\2620\n\370SB@aFk\204\362\022?@\340\331\\\326\n^?@\366\007*\270,*?@\355\265jt\322\371>@\020\354\303\224\343Y?@\231xMn\326)?@R\351\2004\3628?@\016\252\246,g\342>@\016\252\246,g\342>@m43m\362C?@\016\252\246,g\342>@\016\252\246,g\342>@J\344 \302~k?@\244\332\026\251\271\035?@\270\035\243\224\350A?@\200\377\tt0%?@\1779\001h\2514?@\035\237\376\\\361\033?@\244\207B\'\201+?@\016\252\246,g\342>@x\252B2@\201C@\316\336\342i\315k?@\020m\310\"\323j?@\016\252\246,g\342>@{\007\323\265>d?@1J0\227S\034?@\210j\351\0250\036?@\214?\345\260\003C?@\241\021\201*8[B@\016\252\246,g\342>@\334\220\221C\3345?@\215s:\301p&?@\3664<\224\300^<@\3516\335\243M\326>@\271tX\314\275*?@kj\234\352\207h?@k_C\361\340$?@\376\325\272f\356\357>@4\014\3147\223E?@\246\r\374\322\343B?@\245p\350\203V\014?@\332\237\r\345lu=@\356H\206\266\357(?@R\216M\310r\024?@ W?\'|f?@\016\252\246,g\342>@g\373\306\335}P?@\304\362\177\274uE?@\0003\202n\004\031?@1\364<@\345\'?@\016\252\246,g\342>@\345\276\216x\244L?@\016\252\246,g\342>@\201\036\267z\2477?@\024\340I0\241\033?@\026B\240\354\266\036?@k_C\361\340$?@\016\252\246,g\342>@~\323\303\023`\034?@\266K\322b\021b?@\2775H\347\n\330>@\271\276$\010b8?@\350R\2179\365\324>@\035\377b\346\362\020B@\265\373>\202\t??@\263m,\0230A?@\274\304v\026\233G?@\216\314U\223\004\036?@\3664<\224\300^<@\013t\252\274A\n?@Z\214\317\232\207/?@\022\347>\341\032I?@\207*\233\362\270#?@C\037Jp\306.?@\016\252\246,g\342>@e\250bO\246e>@\021\3763\325\204\034?@k9\244\346\324\375>@\216\314U\223\004\036?@M\263\341\237\246&?@\356\335\274\023\316\2468@\016\252\246,g\342>@xexx@G?@\302,\211k\250\367C@\265\354\026\242\334$?@\265\272\n\323\2230?@\376\'i\256hU?@\000\000\000\000\000\000\000\000\322\247\3211hT?@\016\252\246,g\342>@\204\211%\0368#?@\016\252\246,g\342>@\177\014\017\341Y\002?@b\300\000\025\2662?@\317\344\344Z\n>?@t\007\372\322\021z?@)d/\371V#?@\016\252\246,g\342>@\016\252\246,g\342>@m\267\335\016\310M?@\202Uv\233\225T?@\306,\247\326\242\265?@>[\307z\376\320C@\212V\276\230\333\260A@\252\"\215\217\251\013?@\262\364Z\26218?@Z\250R\300n\006B@\260\227\201\t\020:?@\312\337\203\345\225\357?@\002\177\221\316#\004?@\016\252\246,g\342>@\016\252\246,g\342>@\352&\317$\032M?@\377\365\310\036\310G?@\'>\257\020\227xA@\321\003\276.\213\037?@\016\252\246,g\342>@\207\323t>\344??@\346\262 \227\037O?@\016\252\246,g\342>@\016\252\246,g\342>@k_C\361\340$?@\267\351r\363{F?@\223\317a\035\005Q?@\016\252\246,g\342>@\016\252\246,g\342>@\013\034\331t\033)?@l\217n\375\2158?@6\263\2103\203\006?@\227\022\232\017\030<?@~q@w\2752?@\264\252\211\243`I?@\210\203\253\254@@?@\026o\247HmC?@aFk\204\362\022?@l\3604>\343/?@2\315\276*\003>?@\024 \366G\261P?@\016\252\246,g\342>@Wy\031\335\211=?@\016\252\246,g\342>@\016\252\246,g\342>@\2027\344E\001J?@\007r9~\321J?@\036m\242\271pF?@\016\252\246,g\342>@\235\326?\345\240$?@\335\324\213`C\037?@\204\211%\0368#?@\021\3763\325\204\034?@\302\224\377\0078\007B@#A\031}~3?@\036\020. rE?@\0003\202n\004\031?@O\343\033WS)?@\016\252\246,g\342>@_\350\336S\027;?@\333\t$\301\2266?@\002\'\306KB\377>@\016\252\246,g\342>@\016\252\246,g\342>@\212\352\271\260\017c?@\324\235\345{T\3137@J\035_\227\316$?@\"L\336\204\242I?@\221\270m`\303f?@*\351\034\376:O?@_M\265\027\3324?@\311\222\026\2774$?@\016\252\246,g\342>@e\"\177\257\321P?@\333\301i\'\006C?@ZW\207\264\207Q?@^S\275t\207+?@\315p\332\210TI?@a\220\030\t\231\013?@\263\274+\374\300D?@\014$~O\323\"?@\340%@\274\240K?@\362\324\206\203\322\326?@^:\210K\226\036?@\216SS\020\007\n?@6\303\t\037\347\271B@\016\252\246,g\342>@\372\210\251\265\356V?@\375\320\377>\031\035?@yw\233\232\'\326=@`\364B\"bJ?@\344\362\212\332\335\'?@\230\261;\177\327(?@\016\252\246,g\342>@\000\250\303\217\n)?@\203\2122]v\267>@MU!\240\022+?@\230\347\357\272N*?@>\202U9\372G?@yb\351\004\263\032?@6\303\t\037\347\271B@\304\342\3176\021\033?@\002\360\321f\376k?@\331[\243D\262K?@.\351\233\021\250R?@\221\325\026qw8?@\025Mv(\206K?@O(=p\247L?@\016\252\246,g\342>@\242\034F\357EA?@1\002RO\275wA@\353\347\000\352\312\034?@\016\252\246,g\342>@\247\032[\302\361\013?@\352\245L\212\271\377>@M\225`\304\373I?@Y\256w\265CW?@\306,\247\326\242\265?@\276\274\331\326\006V?@YR\206\224Z\'?@n\367\335]\254;?@G\013\023pjZ?@8\315W\377\332\010?@O\306\237\303{6?@\361\316H\361\2262?@.XaZ\3160?@\242\212\"&\271\276>@\202\260\304\207\327\2616@\353\025\272\223\273%?@\016\252\246,g\342>@\322\3118\200\247\366>@\032#\"g\345\\?@\356\335\274\023\316\2468@\016\252\246,g\342>@\rs\026U\324\007?@k_C\361\340$?@IO\274QU ?@\274f=6\351K?@\274\250\273D\355\010?@\376\325\272f\356\357>@\016\252\246,g\342>@i\224@\226\036\251G@m\352D\375\271@?@\217\360(\242J??@\001Z\372R\250$?@O\343\033WS)?@m\245+\3346\"?@\240\246<\005gK?@\375u<y\177\004?@\272`x\021\351\002?@\216\314U\223\004\036?@#A\031}~3?@\016\252\246,g\342>@x?u\226JQ?@\016\252\246,g\342>@\364\361<\221\317\206@@\016\252\246,g\342>@aFk\204\362\022?@\016\252\246,g\342>@\026\301\315\"dJ?@CC\336SnL?@\250\243Jm\3225?@\225z\014sgD?@\016\252\246,g\342>@\355\265jt\322\371>@:\016\352\265\257??@\023O&\024\223\036?@*}\000y\3161?@\016\252\246,g\342>@\2379PDaA?@\261\312o\374n\3379@\211\246\025\025\205*?@\016\252\246,g\342>@9\261\\\265\022:?@\016\252\246,g\342>@\255\"x\323\203\350>@\\D~\360&5?@\035f;/\032P?@Q=xh\3708?@\020\354\303\224\343Y?@pP}8zX?@\016\252\246,g\342>@6\265\235\211\356C?@\016\252\246,g\342>@\350R\2179\365\324>@\307@D\276:\006?@\037~\311u\200\3168@\037~\311u\200\3168@nF\037l\313H?@2 Q\315)\014?@\016\252\246,g\342>@\366\211\3507\0363?@(\345\243\300\177\tB@\t?\027#\016??@\rQ\345\331-&?@>\r\340\372\246P?@\016\252\246,g\342>@\016\252\246,g\342>@\213\260v\271\367&?@\214Z\312\221Q\r?@\213v\243\213/\016?@\344ht\356\264R?@T\222\351\343%W?@\306,\247\326\242\265?@]\300UO\306\037?@\213\260v\271\367&?@L\224*\262^\"?@\301\320\365\336k\210A@\344!U{uO?@\016\252\246,g\342>@Xk\r<g7?@\341\250wJf<?@G\344\002$/$B@\302\035\237\002\212\004?@\016\252\246,g\342>@0\332\343zU\034?@L\230\3236\2158?@i\013\340\247\307\0208@\016\252\246,g\342>@m\352D\375\271@?@\273\000\014\0035V?@\212`\200\231\030&?@\363\335\372\341\271\006?@\240\301Z\232\367&?@aFk\204\362\022?@d\\7\270\262e?@I\334\311S\r\"?@\220\256\007SSb?@\367\010\350\353\371\034?@G\324\355\307i4?@\202\026w\230\010K?@\203%T\255\216\003?@\016\252\246,g\342>@05\325\321\3302?@\001\2262h\234,?@\016\252\246,g\342>@\215\006\27792\024?@\376\325\272f\356\357>@b\212\004\355[L?@>,\005Y\361B?@\014$~O\323\"?@\033M)E\210\022?@\016\252\246,g\342>@\003\032gH\002M?@\016\252\246,g\342>@\016\252\246,g\342>@\016\252\246,g\342>@\216\314U\223\004\036?@\240\246<\005gK?@\245U\025d\203P?@M\267\020\020\275H?@0\032\241\240\366e?@\226\241\337\021j<?@aFk\204\362\022?@l0\301\344\017B?@\002\'\306KB\377>@\03374\315U>?@\0003\202n\004\031?@\364\361<\221\317\206@@\321\031\331\215\361I?@6%S\351\034eB@"
      }
    }
  }
}
node {
  name: "Const_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\364\323\000\000\000\000\000\000\371\307\000\000\000\000\000\000\272\235\000\000\000\000\000\000\313s\001\000\000\000\000\000\004\213\000\000\000\000\000\000\340\013\001\000\000\000\000\000\265\253\000\000\000\000\000\000\023Q\001\000\000\000\000\000\241\246\000\000\000\000\000\000\213\304\000\000\000\000\000\000\230\276\000\000\000\000\000\000\243\317\000\000\000\000\000\000\222S\000\000\000\000\000\000nh\000\000\000\000\000\000?\313\000\000\000\000\000\000\326\300\000\000\000\000\000\000(D\001\000\000\000\000\000\201W\000\000\000\000\000\000}>\000\000\000\000\000\000E \001\000\000\000\000\000D\236\000\000\000\000\000\000\355\202\000\000\000\000\000\000e\316\000\000\000\000\000\000\357\325\000\000\000\000\000\000\207\234\000\000\000\000\000\000\313Z\001\000\000\000\000\000Gi\000\000\000\000\000\000\233K\000\000\000\000\000\000\206O\001\000\000\000\000\000/\223\000\000\000\000\000\000=\240\000\000\000\000\000\000l\313\000\000\000\000\000\000}w\000\000\000\000\000\000\236\224\000\000\000\000\000\000|s\000\000\000\000\000\000u\315\000\000\000\000\000\000\003~\000\000\000\000\000\000\342\273\000\000\000\000\000\000q\276\000\000\000\000\000\000\321\351\000\000\000\000\000\000\204\261\000\000\000\000\000\000\340a\000\000\000\000\000\000fN\000\000\000\000\000\000\260\265\000\000\000\000\000\000[\317\000\000\000\000\000\000\333\327\000\000\000\000\000\000\243\234\000\000\000\000\000\000,\330\000\000\000\000\000\000\001\304\000\000\000\000\000\000\362\251\000\000\000\000\000\000\032~\000\000\000\000\000\000:\177\000\000\000\000\000\000\310\253\000\000\000\000\000\000<\026\000\000\000\000\000\000\"\004\001\000\000\000\000\000\377^\000\000\000\000\000\000\202\000\001\000\000\000\000\000\265\007\001\000\000\000\000\000\320\314\000\000\000\000\000\000mV\001\000\000\000\000\000\221\000\001\000\000\000\000\000\352[\000\000\000\000\000\000\333\227\000\000\000\000\000\000$\332\000\000\000\000\000\000hd\000\000\000\000\000\000\222n\000\000\000\000\000\000\225U\000\000\000\000\000\0000\241\000\000\000\000\000\000\375\352\000\000\000\000\000\000\303x\000\000\000\000\000\000L\273\000\000\000\000\000\000\347;\001\000\000\000\000\000H\217\000\000\000\000\000\000\226\300\000\000\000\000\000\000\'\270\000\000\000\000\000\000}\237\000\000\000\000\000\000\013\003\001\000\000\000\000\000\350\255\000\000\000\000\000\000\224\272\000\000\000\000\000\000s\\\000\000\000\000\000\000\205\322\000\000\000\000\000\0007X\000\000\000\000\000\000|<\001\000\000\000\000\000\177\200\000\000\000\000\000\000\265\272\000\000\000\000\000\000\347\203\000\000\000\000\000\000\212\377\000\000\000\000\000\000\025(\001\000\000\000\000\000\0103\000\000\000\000\000\000*9\000\000\000\000\000\000\035\334\000\000\000\000\000\000s=\000\000\000\000\000\000\334\377\000\000\000\000\000\000\205\313\000\000\000\000\000\000\362?\001\000\000\000\000\000\276\251\000\000\000\000\000\000\212\372\000\000\000\000\000\000\331d\000\000\000\000\000\000&\214\000\000\000\000\000\000~\243\001\000\000\000\000\000\264\263\000\000\000\000\000\000\353\217\000\000\000\000\000\000\226#\001\000\000\000\000\000\004\355\000\000\000\000\000\000\202\373\000\000\000\000\000\000\330s\000\000\000\000\000\000\004[\000\000\000\000\000\000f\300\000\000\000\000\000\000\214\n\001\000\000\000\000\000\177\220\000\000\000\000\000\000\024C\000\000\000\000\000\000\211\337\000\000\000\000\000\000:]\000\000\000\000\000\000u\346\000\000\000\000\000\000\217P\001\000\000\000\000\000\356\376\000\000\000\000\000\000\301b\000\000\000\000\000\000\244\261\000\000\000\000\000\000\272z\000\000\000\000\000\000\262\251\000\000\000\000\000\000\225l\000\000\000\000\000\000\205\221\000\000\000\000\000\000; \002\000\000\000\000\000\257\330\000\000\000\000\000\000\023r\000\000\000\000\000\000\355\275\000\000\000\000\000\000\342\246\000\000\000\000\000\000\377\266\000\000\000\000\000\000\031\002\000\000\000\000\000\000\245\257\000\000\000\000\000\000\260\313\000\000\000\000\000\000\025\374\000\000\000\000\000\000\362n\000\000\000\000\000\000|q\000\000\000\000\000\000 H\001\000\000\000\000\000\361\234\000\000\000\000\000\000\023r\001\000\000\000\000\000\006\307\000\000\000\000\000\000\014v\000\000\000\000\000\000\360\205\000\000\000\000\000\000\342d\000\000\000\000\000\000AT\000\000\000\000\000\000W\024\001\000\000\000\000\000j\270\000\000\000\000\000\000S\247\000\000\000\000\000\000/\276\000\000\000\000\000\000E\004\001\000\000\000\000\000\270\350\000\000\000\000\000\000\232m\000\000\000\000\000\000\363F\000\000\000\000\000\000Uq\000\000\000\000\000\000\367\350\000\000\000\000\000\000I\236\000\000\000\000\000\000\207\nr\001\000\000\000\000\000\032\370\000\000\000\000\000\000U\016\001\000\000\000\000\000J\326\000\000\000\000\000\000\177\236\000\000\000\000\000\000\224\356\000\000\000\000\000\000\013\324\000\000\000\000\000\000!\216\000\000\000\000\000\000\310\254\000\000\000\000\000\000]\365\000\000\000\000\000\000E\226\000\000\000\000\000\000\326\261\000\000\000\000\000\000\275\323\000\000\000\000\000\000\322\340\000\000\000\000\000\000R\372\000\000\000\000\000\000\006U\000\000\000\000\000\000/j\000\000\000\000\000\000\240[\000\000\000\000\000\000\034\325\000\000\000\000\000\000\304\207\000\000\000\000\000\000dA\001\000\000\000\000\000.\274\000\000\000\000\000\000\366`\000\000\000\000\000\000u\222\000\000\000\000\000\000,\253\000\000\000\000\000\000X[\001\000\000\000\000\000i\260\000\000\000\000\000\000\257[\001\000\000\000\000\000\r\343\000\000\000\000\000\000I\313\000\000\000\000\000\000\347\255\000\000\000\000\000\000\251\n\001\000\000\000\000\000\370\313\000\000\000\000\000\000Ur\000\000\000\000\000\000\335\253\000\000\000\000\000\000\315\344\000\000\000\000\000\000\010\331\000\000\000\000\000\000%\020\001\000\000\000\000\000\276\247\000\000\000\000\000\000\002t\000\000\000\000\000\000m\326\000\000\000\000\000\000\010\325\000\000\000\000\000\000s\261\000\000\000\000\000\000#\010\001\000\000\000\000\000g\221\000\000\000\000\000\000\265\260\000\000\000\000\000\000\322\251\000\000\000\000\000\000z\372\000\000\000\000\000\000k!\001\000\000\000\000\000\222\324\000\000\000\000\000\000\340/\000\000\000\000\000\000i\320\000\000\000\000\000\000jh\000\000\000\000\000\000\003\351\000\000\000\000\000\000\266\241\000\000\000\000\000\000N\273\000\000\000\000\000\000pn\000\000\000\000\000\0009l\000\000\000\000\000\000\300\336\000\000\000\000\000\000\354\257\000\000\000\000\000\000=\341\000\000\000\000\000\000\340\352\000\000\000\000\000\000\226x\000\000\000\000\000\000}\205\000\000\000\000\000\000\r\272\000\000\000\000\000\000\010\203\000\000\000\000\000\000\004y\000\000\000\000\000\000]\221\000\000\000\000\000\000Ln\000\000\000\000\000\000\024Z\000\000\000\000\000\000Q\t\001\000\000\000\000\000\230\215\000\000\000\000\000\000\255\224\001\000\000\000\000\000m\231\000\000\000\000\000\000\372\243\000\000\000\000\000\000$w\001\000\000\000\000\000\003\233\000\000\000\000\000\000\"j\000\000\000\000\000\000$\275\000\000\000\000\000\000\255\032\001\000\000\000\000\000A\336\000\000\000\000\000\0002;\000\000\000\000\000\000\252\267\000\000\000\000\000\000\253H\001\000\000\000\000\0003\005\001\000\000\000\000\000\376\362\000\000\000\000\000\0000\224\000\000\000\000\000\000\326\365\000\000\000\000\000\000\326\013\001\000\000\000\000\000\243\267\000\000\000\000\000\000\211n\000\000\000\000\000\000\267\300\000\000\000\000\000\000(\354\000\000\000\000\000\000\350\216\000\000\000\000\000\000\364M\000\000\000\000\000\000\202\341\000\000\000\000\000\000\317\262\000\000\000\000\000\000\372\235\000\000\000\000\000\000\230\250\000\000\000\000\000\000~\311\000\000\000\000\000\000b\354\000\000\000\000\000\000\251\267\000\000\000\000\000\000\270\314\000\000\000\000\000\000\241v\000\000\000\000\000\000\355}\000\000\000\000\000\0000\370\000\000\000\000\000\000\002\330\000\000\000\000\000\0007\305\000\000\000\000\000\000\016\330\000\000\000\000\000\000h\207\000\000\000\000\000\000Z2\001\000\000\000\000\000\344\307\000\000\000\000\000\000\017}\000\000\000\000\000\000\207J\001\000\000\000\000\000o\334\000\000\000\000\000\000j\341\000\000\000\000\000\000\372\343\000\000\000\000\000\000\004\243\000\000\000\000\000\000Q\235\000\000\000\000\000\000yh\000\000\000\000\000\000\231\313\000\000\000\000\000\000\213$\000\000\000\000\000\000\215\364\000\000\000\000\000\000!\254\000\000\000\000\000\000\334\033\001\000\000\000\000\000\362\344\000\000\000\000\000\000\342\322\000\000\000\000\000\000\373\230\000\000\000\000\000\000\270\327\000\000\000\000\000\000g\270\000\000\000\000\000\000\300a\000\000\000\000\000\000F~\001\000\000\000\000\000\260\251\000\000\000\000\000\000\351\314\000\000\000\000\000\000\337\235\000\000\000\000\000\000h\317\000\000\000\000\000\000B\233\000\000\000\000\000\000\216\303\000\000\000\000\000\000\225=\001\000\000\000\000\000\3104\000\000\000\000\000\000ts\000\000\000\000\000\000\307\010\001\000\000\000\000\000\307\010\001\000\000\000\000\000\022\324\000\000\000\000\000\000\342}\000\000\000\000\000\000\340\255\000\000\000\000\000\000\321\277\000\000\000\000\000\000V\010\001\000\000\000\000\000\311\374\000\000\000\000\000\000V\203\000\000\000\000\000\000\273\235\000\000\000\000\000\000\317_\000\000\000\000\000\000\363]\000\000\000\000\000\000\312W\000\000\000\000\000\000\020}\000\000\000\000\000\000\000\321\000\000\000\000\000\000\306\300\000\000\000\000\000\000x\325\000\000\000\000\000\000\264\r\001\000\000\000\000\000\370\232\000\000\000\000\000\000\034T\000\000\000\000\000\000J\256\000\000\000\000\000\0005\216\000\000\000\000\000\000B\271\000\000\000\000\000\000\344\256\001\000\000\000\000\000\320C\001\000\000\000\000\0000\360\000\000\000\000\000\0001\320\000\000\000\000\000\000Tt\000\000\000\000\000\000\266\203\001\000\000\000\000\000\346q\000\000\000\000\000\000Z\362\000\000\000\000\000\000\250g\000\000\000\000\000\000\245\355\000\000\000\000\000\000\344\247\000\000\000\000\000\000\321\263\000\000\000\000\000\000\013\267\000\000\000\000\000\000~\225\000\000\000\000\000\000\t=\001\000\000\000\000\000\341\206\000\000\000\000\000\000>l\000\000\000\000\000\000\\\362\000\000\000\000\000\000\253x\000\000\000\000\000\0009\224\000\000\000\000\000\000\341\026\001\000\000\000\000\000\317~\000\000\000\000\000\000<y\000\000\000\000\000\000\3457\002\000\000\000\000\000\374N\001\000\000\000\000\000\356>\001\000\000\000\000\000\356<\001\000\000\000\000\000\366\235\000\000\000\000\000\000\326r\000\000\000\000\000\000\216\332\000\000\000\000\000\000\233\213\000\000\000\000\000\000>\356\000\000\000\000\000\000-m\000\000\000\000\000\000\332\262\000\000\000\000\000\000\363\345\000\000\000\000\000\000\256\315\000\000\000\000\000\000\250\240\000\000\000\000\000\000h\325\000\000\000\000\000\000\273\365\000\000\000\000\000\000~\332\000\000\000\000\000\000\t\346\000\000\000\000\000\000\026\315\000\000\000\000\000\000jp\000\000\000\000\000\000\302\317\000\000\000\000\000\000\004\272\000\000\000\000\000\000\225\r\001\000\000\000\000\000PF\000\000\000\000\000\000@t\000\000\000\000\000\000r\243\000\000\000\000\000\000\205^\001\000\000\000\000\000\323\024\001\000\000\000\000\000\024\327\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/ExpandDims"
  op: "ExpandDims"
  input: "Const_8"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/to_sparse_input/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9
          }
        }
        string_val: "\344\270\234"
        string_val: "\345\215\227"
        string_val: "\350\245\277"
        string_val: "\345\214\227"
        string_val: "\344\270\234\345\215\227"
        string_val: "\344\270\234\345\214\227"
        string_val: "\350\245\277\345\215\227"
        string_val: "\350\245\277\345\214\227"
        string_val: "\346\232\202\346\227\240\346\225\260\346\215\256"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\t\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 9
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chu/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chu/ExpandDims"
  op: "ExpandDims"
  input: "Const_5"
  input: "dnn/input_from_feature_columns/input_layer/chu/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chu/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/chu/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chu/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chu/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chu/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chu/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chu/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/chu/Shape"
  input: "dnn/input_from_feature_columns/input_layer/chu/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/chu/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/chu/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chu/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chu/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/chu/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/chu/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/chu/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/chu/Cast"
  input: "dnn/input_from_feature_columns/input_layer/chu/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/ExpandDims"
  op: "ExpandDims"
  input: "Const"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/to_sparse_input/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3
          }
        }
        string_val: "\346\234\211"
        string_val: "\346\227\240"
        string_val: "\346\232\202\346\227\240\346\225\260\346\215\256"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/dianti_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/ExpandDims"
  op: "ExpandDims"
  input: "Const_9"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/to_sparse_input/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3
          }
        }
        string_val: "\344\275\216"
        string_val: "\344\270\255"
        string_val: "\351\253\230"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/height_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/ExpandDims"
  op: "ExpandDims"
  input: "Const_7"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/to_sparse_input/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2
          }
        }
        string_val: "\351\222\242\346\267\267\347\273\223\346\236\204"
        string_val: "\347\240\226\346\267\267\347\273\223\346\236\204"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/ExpandDims"
  op: "ExpandDims"
  input: "Const_1"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/to_sparse_input/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2
          }
        }
        string_val: "\346\235\277\346\245\274"
        string_val: "\345\241\224\346\245\274"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lat/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lat/ExpandDims"
  op: "ExpandDims"
  input: "Const_14"
  input: "dnn/input_from_feature_columns/input_layer/lat/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lat/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/lat/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lat/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lat/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lat/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lat/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lat/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/lat/Shape"
  input: "dnn/input_from_feature_columns/input_layer/lat/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/lat/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/lat/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lat/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lat/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/lat/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/lat/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lat/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/lat/Cast"
  input: "dnn/input_from_feature_columns/input_layer/lat/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lng/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lng/ExpandDims"
  op: "ExpandDims"
  input: "Const_13"
  input: "dnn/input_from_feature_columns/input_layer/lng/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lng/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/lng/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lng/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lng/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lng/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lng/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lng/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/lng/Shape"
  input: "dnn/input_from_feature_columns/input_layer/lng/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/lng/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/lng/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lng/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lng/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/lng/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/lng/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/lng/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/lng/Cast"
  input: "dnn/input_from_feature_columns/input_layer/lng/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/louceng/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/louceng/ExpandDims"
  op: "ExpandDims"
  input: "Const_10"
  input: "dnn/input_from_feature_columns/input_layer/louceng/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/louceng/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/louceng/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/louceng/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/louceng/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/louceng/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/louceng/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/louceng/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/louceng/Shape"
  input: "dnn/input_from_feature_columns/input_layer/louceng/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/louceng/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/louceng/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/louceng/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/louceng/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/louceng/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/louceng/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/louceng/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/louceng/Cast"
  input: "dnn/input_from_feature_columns/input_layer/louceng/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/mianji/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/mianji/ExpandDims"
  op: "ExpandDims"
  input: "Const_11"
  input: "dnn/input_from_feature_columns/input_layer/mianji/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/mianji/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/mianji/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/mianji/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/mianji/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/mianji/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/mianji/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/mianji/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/mianji/Shape"
  input: "dnn/input_from_feature_columns/input_layer/mianji/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/mianji/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/mianji/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/mianji/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/mianji/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/mianji/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/mianji/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/mianji/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/mianji/Cast"
  input: "dnn/input_from_feature_columns/input_layer/mianji/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/shi/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/shi/ExpandDims"
  op: "ExpandDims"
  input: "Const_3"
  input: "dnn/input_from_feature_columns/input_layer/shi/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/shi/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/shi/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/shi/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/shi/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/shi/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/shi/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/shi/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/shi/Shape"
  input: "dnn/input_from_feature_columns/input_layer/shi/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/shi/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/shi/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/shi/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/shi/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/shi/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/shi/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/shi/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/shi/Cast"
  input: "dnn/input_from_feature_columns/input_layer/shi/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/tihubili/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/tihubili/ExpandDims"
  op: "ExpandDims"
  input: "Const_12"
  input: "dnn/input_from_feature_columns/input_layer/tihubili/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/tihubili/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/tihubili/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/tihubili/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/tihubili/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/tihubili/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/tihubili/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/tihubili/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/tihubili/Shape"
  input: "dnn/input_from_feature_columns/input_layer/tihubili/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/tihubili/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/tihubili/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/tihubili/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/tihubili/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/tihubili/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/tihubili/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/tihubili/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/tihubili/Cast"
  input: "dnn/input_from_feature_columns/input_layer/tihubili/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/ting/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/ting/ExpandDims"
  op: "ExpandDims"
  input: "Const_4"
  input: "dnn/input_from_feature_columns/input_layer/ting/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/ting/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/ting/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/ting/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/ting/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/ting/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/ting/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/ting/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/ting/Shape"
  input: "dnn/input_from_feature_columns/input_layer/ting/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/ting/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/ting/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/ting/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/ting/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/ting/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/ting/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/ting/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/ting/Cast"
  input: "dnn/input_from_feature_columns/input_layer/ting/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/wei/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/wei/ExpandDims"
  op: "ExpandDims"
  input: "Const_6"
  input: "dnn/input_from_feature_columns/input_layer/wei/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/wei/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/wei/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/wei/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/wei/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/wei/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/wei/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/wei/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/wei/Shape"
  input: "dnn/input_from_feature_columns/input_layer/wei/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/wei/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/wei/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/wei/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/wei/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/wei/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/wei/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/wei/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/wei/Cast"
  input: "dnn/input_from_feature_columns/input_layer/wei/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/ExpandDims"
  op: "ExpandDims"
  input: "Const_2"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/to_sparse_input/ignore_value/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/to_sparse_input/NotEqual"
  op: "NotEqual"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/to_sparse_input/ignore_value/x"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/to_sparse_input/indices"
  op: "Where"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/to_sparse_input/NotEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/to_sparse_input/values"
  op: "GatherNd"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/ExpandDims"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/to_sparse_input/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/to_sparse_input/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 4
          }
        }
        string_val: "\346\257\233\345\235\257"
        string_val: "\345\205\266\344\273\226"
        string_val: "\347\256\200\350\243\205"
        string_val: "\347\262\276\350\243\205"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/range"
  op: "Range"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/range/start"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/Size"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/Cast"
  op: "Cast"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/hash_table/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/hash_table/table_init/LookupTableImportV2"
  op: "LookupTableImportV2"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/Const"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/Cast"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/hash_table_Lookup/LookupTableFindV2"
  op: "LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/hash_table/hash_table"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/to_sparse_input/values"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/hash_table/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/SparseToDense"
  op: "SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/to_sparse_input/indices"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/to_sparse_input/dense_shape"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/hash_table_Lookup/LookupTableFindV2"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/one_hot"
  op: "OneHot"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/SparseToDense"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/one_hot/depth"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/one_hot/on_value"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/Sum"
  op: "Sum"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/one_hot"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/strided_slice"
  op: "StridedSlice"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/Shape"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/strided_slice/stack"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/strided_slice/stack_1"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/Reshape/shape"
  op: "Pack"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/strided_slice"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/Reshape"
  op: "Reshape"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/Sum"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/input_from_feature_columns/input_layer/concat"
  op: "ConcatV2"
  input: "dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/chu/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/dianti_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/height_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/lat/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/lng/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/louceng/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/mianji/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/shi/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/tihubili/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/ting/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/wei/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/Reshape"
  input: "dnn/input_from_feature_columns/input_layer/concat/axis"
  attr {
    key: "N"
    value {
      i: 15
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.37796446681022644
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.37796446681022644
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/hiddenlayer_0/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/hiddenlayer_0/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/MatMul"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_layer/concat"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_0/MatMul"
  input: "dnn/hiddenlayer_0/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_0/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 3870
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction/Size"
  input: "dnn/zero_fraction/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/Switch"
  op: "Switch"
  input: "dnn/zero_fraction/LessEqual"
  input: "dnn/zero_fraction/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/switch_t"
  op: "Identity"
  input: "dnn/zero_fraction/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/switch_f"
  op: "Identity"
  input: "dnn/zero_fraction/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/pred_id"
  op: "Identity"
  input: "dnn/zero_fraction/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero/zeros"
  op: "Const"
  input: "^dnn/zero_fraction/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction/cond/count_nonzero/NotEqual/Switch:1"
  input: "dnn/zero_fraction/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/zero_fraction/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/hiddenlayer_0/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero/Cast"
  op: "Cast"
  input: "dnn/zero_fraction/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero/Const"
  op: "Const"
  input: "^dnn/zero_fraction/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction/cond/count_nonzero/Cast"
  input: "dnn/zero_fraction/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/Cast"
  op: "Cast"
  input: "dnn/zero_fraction/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^dnn/zero_fraction/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction/cond/count_nonzero_1/NotEqual/Switch"
  input: "dnn/zero_fraction/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/zero_fraction/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/hiddenlayer_0/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^dnn/zero_fraction/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction/cond/count_nonzero_1/Cast"
  input: "dnn/zero_fraction/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction/cond/Merge"
  op: "Merge"
  input: "dnn/zero_fraction/cond/count_nonzero_1/nonzero_count"
  input: "dnn/zero_fraction/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction/Size"
  input: "dnn/zero_fraction/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction/counts_to_fraction/Cast"
  input: "dnn/zero_fraction/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction/fraction"
  op: "Identity"
  input: "dnn/zero_fraction/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values/tags"
  input: "dnn/zero_fraction/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_0_activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_0_activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_0_activation/tag"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.4472135901451111
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4472135901451111
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/hiddenlayer_1/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/hiddenlayer_1/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_1/MatMul"
  input: "dnn/hiddenlayer_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 7740
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_1/Size"
  input: "dnn/zero_fraction_1/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/Switch"
  op: "Switch"
  input: "dnn/zero_fraction_1/LessEqual"
  input: "dnn/zero_fraction_1/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/switch_t"
  op: "Identity"
  input: "dnn/zero_fraction_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/switch_f"
  op: "Identity"
  input: "dnn/zero_fraction_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/pred_id"
  op: "Identity"
  input: "dnn/zero_fraction_1/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_1/cond/count_nonzero/NotEqual/Switch:1"
  input: "dnn/zero_fraction_1/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/zero_fraction_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/hiddenlayer_1/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_1/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero/Const"
  op: "Const"
  input: "^dnn/zero_fraction_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_1/cond/count_nonzero/Cast"
  input: "dnn/zero_fraction_1/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_1/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_1/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual/Switch"
  input: "dnn/zero_fraction_1/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/zero_fraction_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/hiddenlayer_1/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_1/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^dnn/zero_fraction_1/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_1/cond/count_nonzero_1/Cast"
  input: "dnn/zero_fraction_1/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_1/cond/Merge"
  op: "Merge"
  input: "dnn/zero_fraction_1/cond/count_nonzero_1/nonzero_count"
  input: "dnn/zero_fraction_1/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_1/Size"
  input: "dnn/zero_fraction_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_1/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_1/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_1/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_1/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_1/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_1/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_1/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_1_activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_1_activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_1_activation/tag"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\036\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3464101552963257
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3464101552963257
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_2/weights/part_0"
  input: "dnn/hiddenlayer_2/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_2/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_2/biases/part_0"
  input: "dnn/hiddenlayer_2/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_2/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_2/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/hiddenlayer_2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_2/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_2/MatMul"
  input: "dnn/hiddenlayer_2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_2/hiddenlayer_2/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 11610
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_2/Size"
  input: "dnn/zero_fraction_2/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/Switch"
  op: "Switch"
  input: "dnn/zero_fraction_2/LessEqual"
  input: "dnn/zero_fraction_2/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/switch_t"
  op: "Identity"
  input: "dnn/zero_fraction_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/switch_f"
  op: "Identity"
  input: "dnn/zero_fraction_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/pred_id"
  op: "Identity"
  input: "dnn/zero_fraction_2/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_2/cond/count_nonzero/NotEqual/Switch:1"
  input: "dnn/zero_fraction_2/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_2/hiddenlayer_2/Relu"
  input: "dnn/zero_fraction_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/hiddenlayer_2/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_2/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero/Const"
  op: "Const"
  input: "^dnn/zero_fraction_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_2/cond/count_nonzero/Cast"
  input: "dnn/zero_fraction_2/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_2/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_2/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual/Switch"
  input: "dnn/zero_fraction_2/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_2/hiddenlayer_2/Relu"
  input: "dnn/zero_fraction_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/hiddenlayer_2/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_2/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^dnn/zero_fraction_2/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_2/cond/count_nonzero_1/Cast"
  input: "dnn/zero_fraction_2/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_2/cond/Merge"
  op: "Merge"
  input: "dnn/zero_fraction_2/cond/count_nonzero_1/nonzero_count"
  input: "dnn/zero_fraction_2/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_2/Size"
  input: "dnn/zero_fraction_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_2/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_2/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_2/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_2/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_2/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_2/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_2_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_2_fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_2/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_2_activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_2_activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_2_activation/tag"
  input: "dnn/hiddenlayer_2/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\036\000\000\000\036\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3162277638912201
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3162277638912201
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_3/weights/part_0"
  input: "dnn/hiddenlayer_3/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_3/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_3/biases/part_0"
  input: "dnn/hiddenlayer_3/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_3/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_3/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_2/hiddenlayer_2/Relu"
  input: "dnn/hiddenlayer_3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_3/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_3/MatMul"
  input: "dnn/hiddenlayer_3/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_3/hiddenlayer_3/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 11610
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_3/Size"
  input: "dnn/zero_fraction_3/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/Switch"
  op: "Switch"
  input: "dnn/zero_fraction_3/LessEqual"
  input: "dnn/zero_fraction_3/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/switch_t"
  op: "Identity"
  input: "dnn/zero_fraction_3/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/switch_f"
  op: "Identity"
  input: "dnn/zero_fraction_3/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/pred_id"
  op: "Identity"
  input: "dnn/zero_fraction_3/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_3/cond/count_nonzero/NotEqual/Switch:1"
  input: "dnn/zero_fraction_3/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_3/hiddenlayer_3/Relu"
  input: "dnn/zero_fraction_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/hiddenlayer_3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_3/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero/Const"
  op: "Const"
  input: "^dnn/zero_fraction_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_3/cond/count_nonzero/Cast"
  input: "dnn/zero_fraction_3/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_3/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_3/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual/Switch"
  input: "dnn/zero_fraction_3/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_3/hiddenlayer_3/Relu"
  input: "dnn/zero_fraction_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/hiddenlayer_3/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_3/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^dnn/zero_fraction_3/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_3/cond/count_nonzero_1/Cast"
  input: "dnn/zero_fraction_3/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_3/cond/Merge"
  op: "Merge"
  input: "dnn/zero_fraction_3/cond/count_nonzero_1/nonzero_count"
  input: "dnn/zero_fraction_3/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_3/Size"
  input: "dnn/zero_fraction_3/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_3/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_3/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_3/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_3/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_3/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_3/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_3_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_3_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_3_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_3_fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_3/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_3_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_3_activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_3_activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_3_activation/tag"
  input: "dnn/hiddenlayer_3/hiddenlayer_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\036\000\000\000\024\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3464101552963257
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3464101552963257
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_4/weights/part_0"
  input: "dnn/hiddenlayer_4/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_4/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_4/biases/part_0"
  input: "dnn/hiddenlayer_4/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_4/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_4/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_3/hiddenlayer_3/Relu"
  input: "dnn/hiddenlayer_4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_4/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_4/MatMul"
  input: "dnn/hiddenlayer_4/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_4/hiddenlayer_4/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 7740
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_4/Size"
  input: "dnn/zero_fraction_4/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/Switch"
  op: "Switch"
  input: "dnn/zero_fraction_4/LessEqual"
  input: "dnn/zero_fraction_4/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/switch_t"
  op: "Identity"
  input: "dnn/zero_fraction_4/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/switch_f"
  op: "Identity"
  input: "dnn/zero_fraction_4/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/pred_id"
  op: "Identity"
  input: "dnn/zero_fraction_4/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_4/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_4/cond/count_nonzero/NotEqual/Switch:1"
  input: "dnn/zero_fraction_4/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_4/hiddenlayer_4/Relu"
  input: "dnn/zero_fraction_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/hiddenlayer_4/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_4/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero/Const"
  op: "Const"
  input: "^dnn/zero_fraction_4/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_4/cond/count_nonzero/Cast"
  input: "dnn/zero_fraction_4/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_4/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_4/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_4/cond/count_nonzero_1/NotEqual/Switch"
  input: "dnn/zero_fraction_4/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_4/hiddenlayer_4/Relu"
  input: "dnn/zero_fraction_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/hiddenlayer_4/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_4/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^dnn/zero_fraction_4/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_4/cond/count_nonzero_1/Cast"
  input: "dnn/zero_fraction_4/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_4/cond/Merge"
  op: "Merge"
  input: "dnn/zero_fraction_4/cond/count_nonzero_1/nonzero_count"
  input: "dnn/zero_fraction_4/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_4/Size"
  input: "dnn/zero_fraction_4/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_4/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_4/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_4/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_4/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_4/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_4/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_4_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_4_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_4_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_4_fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_4/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_4_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_4_activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_4_activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_4_activation/tag"
  input: "dnn/hiddenlayer_4/hiddenlayer_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.4472135901451111
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4472135901451111
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_5/weights/part_0"
  input: "dnn/hiddenlayer_5/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/weights/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_5/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_5/biases/part_0"
  input: "dnn/hiddenlayer_5/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/biases/part_0/read"
  op: "Identity"
  input: "dnn/hiddenlayer_5/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/weights"
  op: "Identity"
  input: "dnn/hiddenlayer_5/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_4/hiddenlayer_4/Relu"
  input: "dnn/hiddenlayer_5/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/biases"
  op: "Identity"
  input: "dnn/hiddenlayer_5/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/BiasAdd"
  op: "BiasAdd"
  input: "dnn/hiddenlayer_5/MatMul"
  input: "dnn/hiddenlayer_5/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/hiddenlayer_5/hiddenlayer_5/Relu"
  op: "Relu"
  input: "dnn/hiddenlayer_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 3870
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_5/Size"
  input: "dnn/zero_fraction_5/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/Switch"
  op: "Switch"
  input: "dnn/zero_fraction_5/LessEqual"
  input: "dnn/zero_fraction_5/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/switch_t"
  op: "Identity"
  input: "dnn/zero_fraction_5/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/switch_f"
  op: "Identity"
  input: "dnn/zero_fraction_5/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/pred_id"
  op: "Identity"
  input: "dnn/zero_fraction_5/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_5/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_5/cond/count_nonzero/NotEqual/Switch:1"
  input: "dnn/zero_fraction_5/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_5/hiddenlayer_5/Relu"
  input: "dnn/zero_fraction_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/hiddenlayer_5/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_5/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero/Const"
  op: "Const"
  input: "^dnn/zero_fraction_5/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_5/cond/count_nonzero/Cast"
  input: "dnn/zero_fraction_5/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_5/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_5/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_5/cond/count_nonzero_1/NotEqual/Switch"
  input: "dnn/zero_fraction_5/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "dnn/hiddenlayer_5/hiddenlayer_5/Relu"
  input: "dnn/zero_fraction_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/hiddenlayer_5/Relu"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_5/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^dnn/zero_fraction_5/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_5/cond/count_nonzero_1/Cast"
  input: "dnn/zero_fraction_5/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_5/cond/Merge"
  op: "Merge"
  input: "dnn/zero_fraction_5/cond/count_nonzero_1/nonzero_count"
  input: "dnn/zero_fraction_5/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_5/Size"
  input: "dnn/zero_fraction_5/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_5/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_5/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_5/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_5/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_5/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_5/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_5_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_5_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_5_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/hiddenlayer_5_fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_5/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_5_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/hiddenlayer_5_activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/hiddenlayer_5_activation"
  op: "HistogramSummary"
  input: "dnn/dnn/hiddenlayer_5_activation/tag"
  input: "dnn/hiddenlayer_5/hiddenlayer_5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.7385489344596863
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.7385489344596863
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/max"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/RandomUniform"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Initializer/random_uniform"
  op: "Add"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/mul"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "dnn/logits/weights/part_0/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/weights/part_0/read"
  op: "Identity"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/logits/biases/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/Assign"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "dnn/logits/biases/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/logits/biases/part_0/read"
  op: "Identity"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/weights"
  op: "Identity"
  input: "dnn/logits/weights/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/MatMul"
  op: "MatMul"
  input: "dnn/hiddenlayer_5/hiddenlayer_5/Relu"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/logits/biases"
  op: "Identity"
  input: "dnn/logits/biases/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/logits/BiasAdd"
  op: "BiasAdd"
  input: "dnn/logits/MatMul"
  input: "dnn/logits/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/zero_fraction_6/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 387
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/LessEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2147483647
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/LessEqual"
  op: "LessEqual"
  input: "dnn/zero_fraction_6/Size"
  input: "dnn/zero_fraction_6/LessEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/Switch"
  op: "Switch"
  input: "dnn/zero_fraction_6/LessEqual"
  input: "dnn/zero_fraction_6/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/switch_t"
  op: "Identity"
  input: "dnn/zero_fraction_6/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/switch_f"
  op: "Identity"
  input: "dnn/zero_fraction_6/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/pred_id"
  op: "Identity"
  input: "dnn/zero_fraction_6/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/count_nonzero/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_6/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_6/cond/count_nonzero/NotEqual/Switch:1"
  input: "dnn/zero_fraction_6/cond/count_nonzero/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/count_nonzero/NotEqual/Switch"
  op: "Switch"
  input: "dnn/logits/BiasAdd"
  input: "dnn/zero_fraction_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/count_nonzero/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_6/cond/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/count_nonzero/Const"
  op: "Const"
  input: "^dnn/zero_fraction_6/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/count_nonzero/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_6/cond/count_nonzero/Cast"
  input: "dnn/zero_fraction_6/cond/count_nonzero/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_6/cond/count_nonzero/nonzero_count"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/count_nonzero_1/zeros"
  op: "Const"
  input: "^dnn/zero_fraction_6/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "dnn/zero_fraction_6/cond/count_nonzero_1/NotEqual/Switch"
  input: "dnn/zero_fraction_6/cond/count_nonzero_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/count_nonzero_1/NotEqual/Switch"
  op: "Switch"
  input: "dnn/logits/BiasAdd"
  input: "dnn/zero_fraction_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/count_nonzero_1/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_6/cond/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/count_nonzero_1/Const"
  op: "Const"
  input: "^dnn/zero_fraction_6/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/count_nonzero_1/nonzero_count"
  op: "Sum"
  input: "dnn/zero_fraction_6/cond/count_nonzero_1/Cast"
  input: "dnn/zero_fraction_6/cond/count_nonzero_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/zero_fraction_6/cond/Merge"
  op: "Merge"
  input: "dnn/zero_fraction_6/cond/count_nonzero_1/nonzero_count"
  input: "dnn/zero_fraction_6/cond/Cast"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/counts_to_fraction/sub"
  op: "Sub"
  input: "dnn/zero_fraction_6/Size"
  input: "dnn/zero_fraction_6/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/counts_to_fraction/Cast"
  op: "Cast"
  input: "dnn/zero_fraction_6/counts_to_fraction/sub"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/counts_to_fraction/Cast_1"
  op: "Cast"
  input: "dnn/zero_fraction_6/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/counts_to_fraction/truediv"
  op: "RealDiv"
  input: "dnn/zero_fraction_6/counts_to_fraction/Cast"
  input: "dnn/zero_fraction_6/counts_to_fraction/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/zero_fraction_6/fraction"
  op: "Identity"
  input: "dnn/zero_fraction_6/counts_to_fraction/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/logits_fraction_of_zero_values/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/logits_fraction_of_zero_values"
      }
    }
  }
}
node {
  name: "dnn/dnn/logits_fraction_of_zero_values"
  op: "ScalarSummary"
  input: "dnn/dnn/logits_fraction_of_zero_values/tags"
  input: "dnn/zero_fraction_6/fraction"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/dnn/logits_activation/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "dnn/dnn/logits_activation"
      }
    }
  }
}
node {
  name: "dnn/dnn/logits_activation"
  op: "HistogramSummary"
  input: "dnn/dnn/logits_activation/tag"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/predictions/scores"
  op: "Squeeze"
  input: "dnn/logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/predictions/Identity"
  op: "Identity"
  input: "dnn/regression_head/predictions/scores"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss/Cast"
  op: "Cast"
  input: "Const_15"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss"
  op: "SquaredDifference"
  input: "dnn/logits/BiasAdd"
  input: "dnn/regression_head/mean_squared_loss/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss/loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/mean_squared_loss/loss"
  op: "Mean"
  input: "dnn/regression_head/mean_squared_loss"
  input: "dnn/regression_head/mean_squared_loss/loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "dnn/regression_head/mean_squared_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dnn/regression_head/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/strided_slice"
  op: "StridedSlice"
  input: "dnn/regression_head/Shape"
  input: "dnn/regression_head/strided_slice/stack"
  input: "dnn/regression_head/strided_slice/stack_1"
  input: "dnn/regression_head/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "dnn/regression_head/dnn/learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/learning_rate"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/learning_rate/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/learning_rate"
  input: "dnn/regression_head/dnn/learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/learning_rate/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/Fill"
  op: "Fill"
  input: "dnn/regression_head/train_op/dnn/gradients/Shape"
  input: "dnn/regression_head/train_op/dnn/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Reshape"
  op: "Reshape"
  input: "dnn/regression_head/train_op/dnn/gradients/Fill"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Tile"
  op: "Tile"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Reshape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 387.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/truediv"
  op: "RealDiv"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Tile"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Shape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/scalar"
  op: "Const"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Mul"
  op: "Mul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/scalar"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/sub"
  op: "Sub"
  input: "dnn/logits/BiasAdd"
  input: "dnn/regression_head/mean_squared_loss/Cast"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss/loss_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul_1"
  op: "Mul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Mul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Sum"
  op: "Sum"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul_1"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Reshape"
  op: "Reshape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Sum"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Sum_1"
  op: "Sum"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/mul_1"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Reshape_1"
  op: "Reshape"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Sum_1"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Neg"
  op: "Neg"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Neg"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Reshape"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Reshape"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Neg"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/tuple/control_dependency"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/tuple/control_dependency"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/regression_head/mean_squared_loss_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_5/hiddenlayer_5/Relu"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/hiddenlayer_5/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_5/hiddenlayer_5/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/hiddenlayer_5/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/hiddenlayer_5/Relu_grad/ReluGrad"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/hiddenlayer_5/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/hiddenlayer_5/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_5/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_4/hiddenlayer_4/Relu"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/MatMul_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/hiddenlayer_4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_4/hiddenlayer_4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/hiddenlayer_4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/hiddenlayer_4/Relu_grad/ReluGrad"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/hiddenlayer_4/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/hiddenlayer_4/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_3/hiddenlayer_3/Relu"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/hiddenlayer_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_3/hiddenlayer_3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/hiddenlayer_3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/hiddenlayer_3/Relu_grad/ReluGrad"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/hiddenlayer_3/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/hiddenlayer_3/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_2/hiddenlayer_2/Relu"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/hiddenlayer_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_2/hiddenlayer_2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/hiddenlayer_2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/hiddenlayer_2/Relu_grad/ReluGrad"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/hiddenlayer_2/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/hiddenlayer_2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/hiddenlayer_1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/hiddenlayer_1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/hiddenlayer_0/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/hiddenlayer_0/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  op: "MatMul"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  input: "dnn/hiddenlayer_0/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dnn/input_from_feature_columns/input_layer/concat"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 387
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
  input: "^dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad/Assign"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad/read"
  op: "Identity"
  input: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_0/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_0/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_0/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_1/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_1/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_2/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_2/weights/part_0"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_2/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_2/biases/part_0"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_3/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_3/weights/part_0"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_3/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_3/biases/part_0"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_3/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_4/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_4/weights/part_0"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_4/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_4/biases/part_0"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_4/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_5/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_5/weights/part_0"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_5/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/hiddenlayer_5/biases/part_0"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/hiddenlayer_5/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/logits/weights/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/weights/part_0"
  input: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update_dnn/logits/biases/part_0/ApplyAdagrad"
  op: "ApplyAdagrad"
  input: "dnn/logits/biases/part_0"
  input: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad"
  input: "dnn/regression_head/dnn/learning_rate/read"
  input: "dnn/regression_head/train_op/dnn/gradients/dnn/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "update_slots"
    value {
      b: true
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train/update"
  op: "NoOp"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_0/biases/part_0/ApplyAdagrad"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_0/weights/part_0/ApplyAdagrad"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_1/biases/part_0/ApplyAdagrad"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_1/weights/part_0/ApplyAdagrad"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_2/biases/part_0/ApplyAdagrad"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_2/weights/part_0/ApplyAdagrad"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_3/biases/part_0/ApplyAdagrad"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_3/weights/part_0/ApplyAdagrad"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_4/biases/part_0/ApplyAdagrad"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_4/weights/part_0/ApplyAdagrad"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_5/biases/part_0/ApplyAdagrad"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/hiddenlayer_5/weights/part_0/ApplyAdagrad"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/logits/biases/part_0/ApplyAdagrad"
  input: "^dnn/regression_head/train_op/dnn/train/update_dnn/logits/weights/part_0/ApplyAdagrad"
}
node {
  name: "dnn/regression_head/train_op/dnn/train/value"
  op: "Const"
  input: "^dnn/regression_head/train_op/dnn/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/train"
  op: "AssignAdd"
  input: "global_step"
  input: "dnn/regression_head/train_op/dnn/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/train_op/dnn/control_dependency"
  op: "Identity"
  input: "dnn/regression_head/mean_squared_loss/loss"
  input: "^dnn/regression_head/train_op/dnn/train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/mean_squared_loss/loss"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/total/Assign"
  op: "Assign"
  input: "dnn/regression_head/metrics/mean/total"
  input: "dnn/regression_head/metrics/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/total/read"
  op: "Identity"
  input: "dnn/regression_head/metrics/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/count/Assign"
  op: "Assign"
  input: "dnn/regression_head/metrics/mean/count"
  input: "dnn/regression_head/metrics/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/count/read"
  op: "Identity"
  input: "dnn/regression_head/metrics/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Cast"
  op: "Cast"
  input: "dnn/regression_head/metrics/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Sum"
  op: "Sum"
  input: "dnn/regression_head/mean_squared_loss/loss"
  input: "dnn/regression_head/metrics/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/AssignAdd"
  op: "AssignAdd"
  input: "dnn/regression_head/metrics/mean/total"
  input: "dnn/regression_head/metrics/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "dnn/regression_head/metrics/mean/count"
  input: "dnn/regression_head/metrics/mean/Cast"
  input: "^dnn/regression_head/mean_squared_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Maximum"
  op: "Maximum"
  input: "dnn/regression_head/metrics/mean/count/read"
  input: "dnn/regression_head/metrics/mean/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/value"
  op: "DivNoNan"
  input: "dnn/regression_head/metrics/mean/total/read"
  input: "dnn/regression_head/metrics/mean/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/Maximum_1"
  op: "Maximum"
  input: "dnn/regression_head/metrics/mean/AssignAdd_1"
  input: "dnn/regression_head/metrics/mean/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dnn/regression_head/metrics/mean/update_op"
  op: "DivNoNan"
  input: "dnn/regression_head/metrics/mean/AssignAdd"
  input: "dnn/regression_head/metrics/mean/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^dnn/hiddenlayer_0/biases/part_0/Assign"
  input: "^dnn/hiddenlayer_0/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_1/biases/part_0/Assign"
  input: "^dnn/hiddenlayer_1/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_2/biases/part_0/Assign"
  input: "^dnn/hiddenlayer_2/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_3/biases/part_0/Assign"
  input: "^dnn/hiddenlayer_3/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_4/biases/part_0/Assign"
  input: "^dnn/hiddenlayer_4/weights/part_0/Assign"
  input: "^dnn/hiddenlayer_5/biases/part_0/Assign"
  input: "^dnn/hiddenlayer_5/weights/part_0/Assign"
  input: "^dnn/logits/biases/part_0/Assign"
  input: "^dnn/logits/weights/part_0/Assign"
  input: "^dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad/Assign"
  input: "^dnn/regression_head/dnn/learning_rate/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_3/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_3/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_4/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_4/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_5/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_5/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/metrics/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/metrics/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 32
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/weights/part_0"
        string_val: "dnn/hiddenlayer_0/biases/part_0"
        string_val: "dnn/hiddenlayer_1/weights/part_0"
        string_val: "dnn/hiddenlayer_1/biases/part_0"
        string_val: "dnn/hiddenlayer_2/weights/part_0"
        string_val: "dnn/hiddenlayer_2/biases/part_0"
        string_val: "dnn/hiddenlayer_3/weights/part_0"
        string_val: "dnn/hiddenlayer_3/biases/part_0"
        string_val: "dnn/hiddenlayer_4/weights/part_0"
        string_val: "dnn/hiddenlayer_4/biases/part_0"
        string_val: "dnn/hiddenlayer_5/weights/part_0"
        string_val: "dnn/hiddenlayer_5/biases/part_0"
        string_val: "dnn/logits/weights/part_0"
        string_val: "dnn/logits/biases/part_0"
        string_val: "dnn/regression_head/dnn/learning_rate"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad"
        string_val: "dnn/regression_head/metrics/mean/total"
        string_val: "dnn/regression_head/metrics/mean/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_0/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_1/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_2/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_3/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_3/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_4/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_4/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_5/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "dnn/hiddenlayer_5/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "dnn/logits/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "dnn/logits/biases/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 30
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "global_step"
        string_val: "dnn/hiddenlayer_0/weights/part_0"
        string_val: "dnn/hiddenlayer_0/biases/part_0"
        string_val: "dnn/hiddenlayer_1/weights/part_0"
        string_val: "dnn/hiddenlayer_1/biases/part_0"
        string_val: "dnn/hiddenlayer_2/weights/part_0"
        string_val: "dnn/hiddenlayer_2/biases/part_0"
        string_val: "dnn/hiddenlayer_3/weights/part_0"
        string_val: "dnn/hiddenlayer_3/biases/part_0"
        string_val: "dnn/hiddenlayer_4/weights/part_0"
        string_val: "dnn/hiddenlayer_4/biases/part_0"
        string_val: "dnn/hiddenlayer_5/weights/part_0"
        string_val: "dnn/hiddenlayer_5/biases/part_0"
        string_val: "dnn/logits/weights/part_0"
        string_val: "dnn/logits/biases/part_0"
        string_val: "dnn/regression_head/dnn/learning_rate"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^dnn/regression_head/metrics/mean/count/Assign"
  input: "^dnn/regression_head/metrics/mean/total/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
  input: "^dnn/input_from_feature_columns/input_layer/chaoxiang_indicator/chaoxiang_lookup/hash_table/table_init/LookupTableImportV2"
  input: "^dnn/input_from_feature_columns/input_layer/dianti_indicator/dianti_lookup/hash_table/table_init/LookupTableImportV2"
  input: "^dnn/input_from_feature_columns/input_layer/height_indicator/height_lookup/hash_table/table_init/LookupTableImportV2"
  input: "^dnn/input_from_feature_columns/input_layer/jianzhujiegou_indicator/jianzhujiegou_lookup/hash_table/table_init/LookupTableImportV2"
  input: "^dnn/input_from_feature_columns/input_layer/jianzhuleixing_indicator/jianzhuleixing_lookup/hash_table/table_init/LookupTableImportV2"
  input: "^dnn/input_from_feature_columns/input_layer/zhuangxiuqingkuang_indicator/zhuangxiuqingkuang_lookup/hash_table/table_init/LookupTableImportV2"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "dnn/dnn/hiddenlayer_0_fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_0_activation"
  input: "dnn/dnn/hiddenlayer_1_fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_1_activation"
  input: "dnn/dnn/hiddenlayer_2_fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_2_activation"
  input: "dnn/dnn/hiddenlayer_3_fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_3_activation"
  input: "dnn/dnn/hiddenlayer_4_fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_4_activation"
  input: "dnn/dnn/hiddenlayer_5_fraction_of_zero_values"
  input: "dnn/dnn/hiddenlayer_5_activation"
  input: "dnn/dnn/logits_fraction_of_zero_values"
  input: "dnn/dnn/logits_activation"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 15
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_1d024f4c148649f98787d91833799054/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "dnn/hiddenlayer_0/biases"
        string_val: "dnn/hiddenlayer_0/biases/enlayer_0/biases/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_0/weights"
        string_val: "dnn/hiddenlayer_0/weights/nlayer_0/weights/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/biases"
        string_val: "dnn/hiddenlayer_1/biases/enlayer_1/biases/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/weights"
        string_val: "dnn/hiddenlayer_1/weights/nlayer_1/weights/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_2/biases"
        string_val: "dnn/hiddenlayer_2/biases/enlayer_2/biases/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_2/weights"
        string_val: "dnn/hiddenlayer_2/weights/nlayer_2/weights/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_3/biases"
        string_val: "dnn/hiddenlayer_3/biases/enlayer_3/biases/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_3/weights"
        string_val: "dnn/hiddenlayer_3/weights/nlayer_3/weights/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_4/biases"
        string_val: "dnn/hiddenlayer_4/biases/enlayer_4/biases/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_4/weights"
        string_val: "dnn/hiddenlayer_4/weights/nlayer_4/weights/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_5/biases"
        string_val: "dnn/hiddenlayer_5/biases/enlayer_5/biases/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_5/weights"
        string_val: "dnn/hiddenlayer_5/weights/nlayer_5/weights/part_0/Adagrad"
        string_val: "dnn/logits/biases"
        string_val: "dnn/logits/biases/nn/logits/biases/part_0/Adagrad"
        string_val: "dnn/logits/weights"
        string_val: "dnn/logits/weights/n/logits/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/learning_rate"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "32 10 0,32:0,10"
        string_val: "32 10 0,32:0,10"
        string_val: "20 0,20"
        string_val: "20 0,20"
        string_val: "10 20 0,10:0,20"
        string_val: "10 20 0,10:0,20"
        string_val: "30 0,30"
        string_val: "30 0,30"
        string_val: "20 30 0,20:0,30"
        string_val: "20 30 0,20:0,30"
        string_val: "30 0,30"
        string_val: "30 0,30"
        string_val: "30 30 0,30:0,30"
        string_val: "30 30 0,30:0,30"
        string_val: "20 0,20"
        string_val: "20 0,20"
        string_val: "30 20 0,30:0,20"
        string_val: "30 20 0,30:0,20"
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "20 10 0,20:0,10"
        string_val: "20 10 0,20:0,10"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "10 1 0,10:0,1"
        string_val: "10 1 0,10:0,1"
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "dnn/hiddenlayer_0/biases/part_0/read"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_0/weights/part_0/read"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/biases/part_0/read"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_1/weights/part_0/read"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_2/biases/part_0/read"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_2/weights/part_0/read"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_3/biases/part_0/read"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_3/weights/part_0/read"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_4/biases/part_0/read"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_4/weights/part_0/read"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_5/biases/part_0/read"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad/read"
  input: "dnn/hiddenlayer_5/weights/part_0/read"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad/read"
  input: "dnn/logits/biases/part_0/read"
  input: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad/read"
  input: "dnn/logits/weights/part_0/read"
  input: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad/read"
  input: "dnn/regression_head/dnn/learning_rate"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "dnn/hiddenlayer_0/biases"
        string_val: "dnn/hiddenlayer_0/biases/enlayer_0/biases/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_0/weights"
        string_val: "dnn/hiddenlayer_0/weights/nlayer_0/weights/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/biases"
        string_val: "dnn/hiddenlayer_1/biases/enlayer_1/biases/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_1/weights"
        string_val: "dnn/hiddenlayer_1/weights/nlayer_1/weights/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_2/biases"
        string_val: "dnn/hiddenlayer_2/biases/enlayer_2/biases/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_2/weights"
        string_val: "dnn/hiddenlayer_2/weights/nlayer_2/weights/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_3/biases"
        string_val: "dnn/hiddenlayer_3/biases/enlayer_3/biases/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_3/weights"
        string_val: "dnn/hiddenlayer_3/weights/nlayer_3/weights/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_4/biases"
        string_val: "dnn/hiddenlayer_4/biases/enlayer_4/biases/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_4/weights"
        string_val: "dnn/hiddenlayer_4/weights/nlayer_4/weights/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_5/biases"
        string_val: "dnn/hiddenlayer_5/biases/enlayer_5/biases/part_0/Adagrad"
        string_val: "dnn/hiddenlayer_5/weights"
        string_val: "dnn/hiddenlayer_5/weights/nlayer_5/weights/part_0/Adagrad"
        string_val: "dnn/logits/biases"
        string_val: "dnn/logits/biases/nn/logits/biases/part_0/Adagrad"
        string_val: "dnn/logits/weights"
        string_val: "dnn/logits/weights/n/logits/weights/part_0/Adagrad"
        string_val: "dnn/regression_head/dnn/learning_rate"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "32 10 0,32:0,10"
        string_val: "32 10 0,32:0,10"
        string_val: "20 0,20"
        string_val: "20 0,20"
        string_val: "10 20 0,10:0,20"
        string_val: "10 20 0,10:0,20"
        string_val: "30 0,30"
        string_val: "30 0,30"
        string_val: "20 30 0,20:0,30"
        string_val: "20 30 0,20:0,30"
        string_val: "30 0,30"
        string_val: "30 0,30"
        string_val: "30 30 0,30:0,30"
        string_val: "30 30 0,30:0,30"
        string_val: "20 0,20"
        string_val: "20 0,20"
        string_val: "30 20 0,30:0,20"
        string_val: "30 20 0,30:0,20"
        string_val: "10 0,10"
        string_val: "10 0,10"
        string_val: "20 10 0,20:0,10"
        string_val: "20 10 0,20:0,10"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "10 1 0,10:0,1"
        string_val: "10 1 0,10:0,1"
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
        shape {
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "dnn/hiddenlayer_0/biases/part_0"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/biases/part_0/Adagrad"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "dnn/hiddenlayer_0/weights/part_0"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_0/weights/part_0/Adagrad"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_0/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "dnn/hiddenlayer_1/biases/part_0"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/biases/part_0/Adagrad"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "dnn/hiddenlayer_1/weights/part_0"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_1/weights/part_0/Adagrad"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_1/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "dnn/hiddenlayer_2/biases/part_0"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/biases/part_0/Adagrad"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "dnn/hiddenlayer_2/weights/part_0"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_2/weights/part_0/Adagrad"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_2/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "dnn/hiddenlayer_3/biases/part_0"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/biases/part_0/Adagrad"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "dnn/hiddenlayer_3/weights/part_0"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_3/weights/part_0/Adagrad"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_3/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "dnn/hiddenlayer_4/biases/part_0"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/biases/part_0/Adagrad"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "dnn/hiddenlayer_4/weights/part_0"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_4/weights/part_0/Adagrad"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_4/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "dnn/hiddenlayer_5/biases/part_0"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/biases/part_0/Adagrad"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "dnn/hiddenlayer_5/weights/part_0"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/hiddenlayer_5/weights/part_0/Adagrad"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/hiddenlayer_5/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "dnn/logits/biases/part_0"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/logits/biases/part_0/Adagrad"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/biases/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "dnn/logits/weights/part_0"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "dnn/regression_head/dnn/dnn/logits/weights/part_0/Adagrad"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/logits/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "dnn/regression_head/dnn/learning_rate"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dnn/regression_head/dnn/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 38
}
